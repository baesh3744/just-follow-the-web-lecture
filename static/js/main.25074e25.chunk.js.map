{"version":3,"sources":["components/Navigation.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","Fragment","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","fileRef","useRef","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","current","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25074e25.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\n        >\n            <li>\n                <Link to='/' style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon\n                        icon={faTwitter}\n                        color={\"#04AAFF\"}\n                        size='2x'\n                    />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to='/profile'\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon\n                        icon={faUser}\n                        color={\"#04AAFF\"}\n                        size='2x'\n                    />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Navigation;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from \"react\";\nimport {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n} from \"@firebase/auth\";\nimport { authService } from \"fbase\";\nimport \"./AuthForm.css\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await createUserWithEmailAndPassword(\n                    authService,\n                    email,\n                    password\n                );\n            } else {\n                data = await signInWithEmailAndPassword(\n                    authService,\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <React.Fragment>\n            <form className='container' onSubmit={onSubmit}>\n                <input\n                    className='authInput'\n                    name='email'\n                    type='email'\n                    placeholder='Email'\n                    required\n                    value={email}\n                    onChange={onChange}\n                />\n                <input\n                    className='authInput'\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    required\n                    value={password}\n                    onChange={onChange}\n                />\n                <input\n                    className='authInput authSubmit'\n                    type='submit'\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                />\n                {error && <span className='authError'>{error}</span>}\n            </form>\n            <span className='authSwitch' onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </React.Fragment>\n    );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport {\n    GithubAuthProvider,\n    GoogleAuthProvider,\n    signInWithPopup,\n} from \"@firebase/auth\";\nimport {\n    faGithub,\n    faGoogle,\n    faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { authService } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new GithubAuthProvider();\n        }\n        await signInWithPopup(authService, provider);\n    };\n\n    return (\n        <div className='authContainer'>\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size='3x'\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className='authBtns'>\n                <button\n                    className='authBtn'\n                    name='google'\n                    onClick={onSocialClick}\n                >\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button\n                    className='authBtn'\n                    name='github'\n                    onClick={onSocialClick}\n                >\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport \"./Nweet.css\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"Are you sure you want to delete this nweet?\"\n        );\n        if (ok) {\n            await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n            await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        updateDoc(doc(dbService, `nweets/${nweetObj.id}`), { text: newNweet });\n        setEditing(false);\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    return (\n        <div className='nweet'>\n            {editing ? (\n                <React.Fragment>\n                    <form className='container nweetEdit' onSubmit={onSubmit}>\n                        <input\n                            className='formInput'\n                            type='text'\n                            placeholder='Edit your nweet'\n                            value={newNweet}\n                            onChange={onChange}\n                            autoFocus\n                            required\n                        />\n                        <input\n                            className='formBtn'\n                            type='submit'\n                            value='Update Nweet'\n                        />\n                    </form>\n                    <span className='formBtn cancelBtn' onClick={toggleEditing}>\n                        Cancel\n                    </span>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} alt='Attachment' />\n                    )}\n                    {isOwner && (\n                        <div className='nweet__actions'>\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addDoc, collection } from \"@firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport \"./NweetFactory.css\";\n\nconst NweetFactory = ({ userObj }) => {\n    const fileRef = useRef();\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = ref(\n                storageService,\n                `${userObj.uid}/${uuidv4()}`\n            );\n            const response = await uploadString(\n                attachmentRef,\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await getDownloadURL(response.ref);\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachmentClick = () => {\n        setAttachment(\"\");\n        fileRef.current.value = \"\";\n    };\n\n    return (\n        <form onSubmit={onSubmit} className='factoryForm'>\n            <div className='factoryInput__container'>\n                <input\n                    className='factoryInput__input'\n                    type='text'\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                    value={nweet}\n                    onChange={onChange}\n                />\n                <input\n                    className='factoryInput__arrow'\n                    type='submit'\n                    value='&rarr;'\n                />\n            </div>\n            <label for='attach-file' className='factoryInput__label'>\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id='attach-file'\n                type='file'\n                accept='image/*'\n                ref={fileRef}\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className='factoryForm__attachment'>\n                    <img\n                        src={attachment}\n                        alt='Attachment'\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div\n                        className='factoryForm__clear'\n                        onClick={onClearAttachmentClick}\n                    >\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { collection, onSnapshot } from \"@firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport \"./Home.css\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        onSnapshot(collection(dbService, \"nweets\"), (snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n\n    return (\n        <div className='container'>\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { authService } from \"fbase\";\nimport \"./Profile.css\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n    let history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n\n    return (\n        <div className='container'>\n            <form className='profileForm' onSubmit={onSubmit}>\n                <input\n                    className='formInput'\n                    type='text'\n                    placeholder='Display name'\n                    onChange={onChange}\n                    value={newDisplayName}\n                    autoFocus\n                />\n                <input\n                    className='formBtn'\n                    type='submit'\n                    value='Update Profile'\n                    style={{ marginTop: 10 }}\n                />\n            </form>\n            <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"components/Navigation\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path='/'>\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path='/profile'>\n                            <Profile\n                                refreshUser={refreshUser}\n                                userObj={userObj}\n                            />\n                        </Route>\n                    </div>\n                ) : (\n                    <Route exact path='/'>\n                        <Auth />\n                    </Route>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport { updateProfile } from \"@firebase/auth\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => updateProfile(user, args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => updateProfile(user, args),\n        });\n    };\n\n    return (\n        <React.Fragment>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Initializing...\"\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}